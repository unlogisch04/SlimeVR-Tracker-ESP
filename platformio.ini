; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;

; ================================================
; See docs for configuration options and examples:
; https://docs.slimevr.dev/firmware/configuring-project.html#1-configuring-platformioini
; ================================================

;[platformio]
;build_cache_dir = cache

[env]
lib_deps=
  https://github.com/SlimeVR/CmdParser.git
  https://github.com/SlimeVR/base64_arduino.git
  https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library.git
  https://github.com/hideakitai/PCA9547.git
monitor_speed = 115200
monitor_echo = yes
monitor_filters = colorize
;monitor_rts = 0
;monitor_dtr = 0
framework = arduino
build_flags = 
  !python scripts/get_git_commit.py
;If you want to set hardcoded WiFi SSID and password, uncomment and edit the lines below
;To uncomment, only remove ";" and leave the two spaces in front of the tags
; '" - quotes are necessary!
;  -DWIFI_CREDS_SSID='"SSID"'
;  -DWIFI_CREDS_PASSWD='"PASSWORD"'

;If you want to set a static IP address, uncomment and edit the lines below
;  -DWIFI_USE_STATICIP
;  -DWIFI_STATIC_IP=192,168,XXX,XXX
;  -DWIFI_STATIC_GATEWAY=192,168,XXX,XXX
;  -DWIFI_STATIC_SUBNET=255,255,255,0

;  -DSERVER_IP='"192.168.XXX.XXX"'
;  -DSERVER_PORT=6969

; Uncomment below if your board are using 40MHz crystal instead of 26MHz for ESP8266
;  -DF_CRYSTAL=40000000

; Enable -O2 GCC optimization
  -O2
  -std=gnu++2a

build_unflags = -Os -std=gnu++11 -std=gnu++17

; If you want to enable OTA Updates, uncomment and set OTA password here and in credentials.h
; You can set upload_port to device's ip after it's set up for the first time
; Use the same password in SlimeVR Server to let it OTA Update the device
;upload_protocol = espota
;upload_port = 192.168.1.49
;upload_flags =
;  --auth=SlimeVR-OTA

; Settings for different boards

;[env:esp12e]
;platform = espressif8266 @ 4.2.1
;board = esp12e
;; Comment out this line below if you have any trouble uploading the firmware
;; and if it has a CP2102 on it (a square chip next to the usb port): change to 3000000 (3 million) for even faster upload speed
;upload_speed = 921600

; Uncomment below if you want to build for ESP-01
;[env:esp01_1m]
;platform = espressif8266 @ 4.2.1
;board = esp01_1m
;board_build.arduino.ldscript = "eagle.flash.1m64.ld"

; Uncomment below if you want to build for ESP8285 (ESP8266 with embedded Flash)
;[env:esp8285]
;platform = espressif8266 @ 4.2.1
;board = esp8285
;board_build.arduino.ldscript = "eagle.flash.1m64.ld"
;board_build.flash_mode = dout

; Uncomment below if you want to build for esp32
; Check your board name at https://docs.platformio.org/en/latest/platforms/espressif32.html#boards
;[env:esp32]
;platform = https://github.com/tasmota/platform-espressif32/releases/download/2025.04.30/platform-espressif32.zip
;board = esp32dev
;; Comment out this line below if you have any trouble uploading the firmware - and if it has a CP2102 on it (a square chip next to the usb port): change to 3000000 (3 million) for even faster upload speed
;upload_speed = 921600

; If you want to use a ESP32C3, you can use this (experimental)
; Check your board name at https://docs.platformio.org/en/latest/platforms/espressif32.html#boards
; There are 2 main Boardtypes:
; 1. Boards that use a USB 2 Serial Chipset ( esp32-c3-devkitm-1, ttgo-t-oi-plus )
; 2. Boards that relay on the USB interface of the ESP32C3 ( lolin_c3_mini , dfrobot_beetle_esp32c3)
;    On this board there are 2 type some of them need to have set the build flag (menuconfig)
;    -DARDUINO_USB_MODE=1
;    -DARDUINO_USB_CDC_ON_BOOT=1

;[env:esp32c3]
;platform = https://github.com/tasmota/platform-espressif32/releases/download/2025.04.30/platform-espressif32.zip
;build_flags =
;  ${env.build_flags}
;  -DESP32C3
;board = lolin_c3_mini
;monitor_filters = colorize, esp32_exception_decoder

; If you want to use a ESP32C6, you can use this (experimental)
;[env:esp32c6]
;platform = https://github.com/tasmota/platform-espressif32/releases/download/2025.04.30/platform-espressif32.zip
;board = esp32-c6-devkitc-1
;build_flags =
;  ${env.build_flags}
;  -DESP32C6
;  -DARDUINO_USB_MODE=1
;  -DARDUINO_USB_CDC_ON_BOOT=1

[env:esp32c5]
;platform = https://github.com/tasmota/platform-espressif32/releases/download/2025.05.40/platform-espressif32.zip
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/55.03.30-alpha1/platform-espressif32.zip
platform = https://github.com/pioarduino/platform-espressif32.git#develop_33
;platform_packages =
;    platformio/framework-arduinoespressif32 
framework = arduino
board = esp32-c5-devkitc-1
board_build.partitions = partitions_c5.csv
build_flags =
  ${env.build_flags}
  -Wl,-Map=output.map
;  -DARDUINO_I2C_DRIVER=ng
;  -DARDUINO_USB_MODE=1
;  -DARDUINO_USB_CDC_ON_BOOT=1
lib_ignore              = 
;                          Micro-RTSP
;                          epdiy
;                          WiFiProv
;                          ESP_NOW
;                          ESP_SR
;                          Insights
;                          Matter
;                          OpenThread
;                          RainMaker
;                          SPIFFS
;                          USB
;                          NetworkClientSecure
;                          Zigbee
;                          BLE
;                          SimpleBLE
;                          BluetoothSerial
;                          ESP_I2S
;custom_sdkconfig       = .\sdkconfig_unl_espc5
;                          '# CONFIG_SOC_I2S_SUPPORTED is not set'
;                          '# CONFIG_ETH_USE_ESP32_EMAC is not set'
;                          '# CONFIG_ETH_PHY_INTERFACE_RMII is not set'
;                          '# CONFIG_ETH_RMII_CLK_INPUT is not set'
;                          '# CONFIG_ETH_RMII_CLK_IN_GPIO is not set'
;custom_component_remove = 
;                          espressif/esp_hosted
;                          espressif/esp_wifi_remote
;                          espressif/esp-dsp
;                          espressif/network_provisioning
;                          espressif/esp-zboss-lib
;                          espressif/esp-zigbee-lib
;                          espressif/esp_rainmaker
;                          espressif/rmaker_common
;                          espressif/esp_insights
;                          espressif/esp_diag_data_store
;                          espressif/esp_diagnostics
;                          espressif/cbor
;                          espressif/qrcode
;                          espressif/esp-sr
;                          espressif/libsodium
;                          espressif/esp-modbus
;                          chmorgan/esp-libhelix-mp3
;                          espressif/esp32-camera
;                          espressif/ESP_I2S 
monitor_filters = colorize, esp32_exception_decoder 
;upload_protocol = espota
;upload_port = 192.168.1.49
;upload_flags =
;   --no-stub

;upload_speed = 460800
upload_speed = 921600
;  --auth=SlimeVR-OTA
